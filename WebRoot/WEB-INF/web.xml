<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
	<context-param>  
        <param-name>webAppRootKey</param-name>  
        <param-value>hhyz_oa.root</param-value>  
    </context-param>  
    <context-param>  
        <param-name>log4jConfigLocation</param-name>  
        <param-value>/WEB-INF/classes/log4j.properties</param-value>  
    </context-param>  
   <!-- 开一条watchdog线程每60秒扫描一下配置文件的变化 -->
    <context-param>  
        <param-name>log4jRefreshInterval</param-name>  
        <param-value>6000</param-value>  
    </context-param>  
    
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/applicationContext.xml</param-value>
	</context-param>

    <!-- This listener should be registered before ContextLoaderListener in web.xml when using custom log4j initialization -->
	<listener>  
        <listener-class>  
            org.springframework.web.util.Log4jConfigListener  
        </listener-class>  
    </listener>
    
    <listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	<!-- 
		specify a unique context-param "webAppRootKey" per web application. 
		It represents web app root.
		For example, with "webAppRootKey = "hhyz_oa.root":
		log4j.appender.myfile.File=${hhyz_oa.root}/WEB-INF/demo.log
	 -->
	
	<filter>
		<filter-name>struts-cleanup</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ActionContextCleanUp
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts-cleanup</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter>
		<filter-name>struts2</filter-name>
		<filter-class>
			org.apache.struts2.dispatcher.ng.filter.StrutsPrepareAndExecuteFilter
		</filter-class>
	</filter>

	<filter-mapping>
		<filter-name>struts2</filter-name>
		<url-pattern>/*</url-pattern>

	</filter-mapping>
	
	<!--  
	<servlet>
		<servlet-name>QuartzInitializer</servlet-name> 
		<servlet-class>
		    org.quartz.ee.servlet.QuartzInitializerServlet
		</servlet-class> 
		 
		<load-on-startup>1</load-on-startup>
		 
		  <init-param>
		    <param-name>config-file</param-name>
		    <param-value>/some/path/my_quartz.properties</param-value>
		  </init-param>
		 
		  <init-param>
		    <param-name>shutdown-on-unload</param-name>
		    <param-value>true</param-value>
		  </init-param>
		 
		  <init-param>
		    <param-name>start-scheduler-on-load</param-name>
		    <param-value>true</param-value>
		  </init-param>
		 
		 </servlet> 
	-->

	<welcome-file-list>
		<welcome-file>/appjsps/index.jsp</welcome-file>
	</welcome-file-list>
	
</web-app>
